name: Deploy SHMT to RunPod

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Debug - Check files
      run: |
        echo "Current directory: $(pwd)"
        echo "Files in shmt-runpod:"
        ls -la shmt-runpod/
        echo "Dockerfile contents:"
        cat shmt-runpod/Dockerfile
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./shmt-runpod
        file: ./shmt-runpod/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/shmt-runpod:latest
          ${{ secrets.DOCKER_USERNAME }}/shmt-runpod:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to RunPod
      run: |
        echo "üöÄ Docker image built and pushed successfully!"
        echo "üîÑ Updating RunPod endpoint..."
        echo "Endpoint ID: ${{ vars.RUNPOD_ENDPOINT_ID }}"
        
        # First, let's list all endpoints to see what's available
        echo "üîç Listing all endpoints..."
        LIST_RESPONSE=$(curl -s -H "Authorization: Bearer ${{ vars.RUNPOD_API_KEY }}" \
          "https://api.runpod.io/v1/endpoints")
        echo "All Endpoints: $LIST_RESPONSE"
        
        # Then verify the specific endpoint exists
        echo "üîç Verifying endpoint exists..."
        VERIFY_RESPONSE=$(curl -s -H "Authorization: Bearer ${{ vars.RUNPOD_API_KEY }}" \
          "https://api.runpod.io/v1/endpoints/${{ vars.RUNPOD_ENDPOINT_ID }}")
        echo "Verify Response: $VERIFY_RESPONSE"
        
        # Update RunPod endpoint with new Docker image (need to find correct API)
        echo "üîÑ Attempting to update endpoint..."
        RESPONSE=$(curl -s -X PATCH "https://api.runpod.io/v1/endpoints/${{ vars.RUNPOD_ENDPOINT_ID }}" \
          -H "Authorization: Bearer ${{ vars.RUNPOD_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"docker_image": "${{ secrets.DOCKER_USERNAME }}/shmt-runpod:latest"}')
        
        echo "RunPod API Response: $RESPONSE"
        
        # Check if update was successful
        if echo "$RESPONSE" | grep -q '"success":true\|"status":"success"'; then
          echo "‚úÖ RunPod endpoint updated successfully!"
        else
          echo "‚ùå Failed to update RunPod endpoint"
          echo "Response: $RESPONSE"
          exit 1
        fi
        
    - name: Summary
      run: |
        echo "‚úÖ SHMT RunPod deployment pipeline completed!"
        echo "üì¶ Image: ${{ secrets.DOCKER_USERNAME }}/shmt-runpod:latest"
        echo "üîó SHA: ${{ github.sha }}"
